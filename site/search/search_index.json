{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Basic/yaml/","text":"YAML Full form YAML Ain't Markup Language YAML is Data Serialization Language File Extensions .yaml .yml It is human readable and easy to write YAML uses line separation and indentation used to store data structure Writing YAML Key-Value Pair Syntax: - key: value app : \"user-authentication\" port : 9000 version : 1.7 Comments Syntax: - # Comment # Sinble Line Comment app : \"user-authentication\" port : 9000 version : 1.7 Objects We can group this in object using spacing microservice : # Object for Grouping # Sinble Line Comment app : \"user-authentication\" port : 9000 version : 1.7 list If we have multiple microservices then we can list using - 1: list of Objects grouping yaml microservice: # Object for Grouping - app: \"user-authentication\" port: 9000 version: 1.7 - app: \"shopping-cart\" port: 9002 version: 1.9 2: list of simple values (list of just microservice names) microservice : # Object for Grouping - user-authentication - shopping-cart 3: list of lists (we can create list of list using) 3.1. first method using - microservice : # Object for Grouping - app : \"user-authentication\" port : 9000 version : 1.7 - app : \"shopping-cart\" port : 9002 version : - 1.9 - 2.0 - 2.1 3.2. second method using [] microservice : # Object for Grouping - app : \"user-authentication\" port : 9000 version : 1.7 - app : \"shopping-cart\" port : 9002 version : [ 1.9 , 2.0 , 2.1 ] Booleans We can also use boolean values express using on/off, true/false, yes/no microservice : # Object for Grouping - app : \"user-authentication\" port : 9000 version : 1.7 deployed : true String 1: Mutli-Line String 1 st method multiString : \"this is multiline String\\nand this is the next line\\nnext line\" 2 nd method using | multiString : | this is multiline String and this is the next line next line 2: Single-Line Sting 1 st method multiString : \"this is a single line String, that should be all on one line. some other stuff\" 2 nd method using > multiString : > this is a single line String, that should be all on one line. some other stuff Placeholders Values replaced from template generator using {{ }} apiVersion : v1 kind : Service metadata : name : {{ .Values.service.name }} spec : selector : app : {{ .Values.service.app }} ports : - protocol : TCP port : {{ .Values.service.port }} targetPort : {{ .Values.service.targetport }} Multiple YAML Files Multiple YAML Documents in Single File usign --- apiVersion : v1 kind : Pod metadata : name : nginx labels : app : nginx spec : containers : - name : nginx-container image : nginx ports : - containerPort : 80 volumeMounts : - name : nginx-vol mountPath : /usr/nginx/html - name : sidecar-container image : some-image command : [ \"/bin/bash\" ] args : [ \"-c\" , \"echo Hello from the sidecar-container; sleep 300\" ] --- apiVersion : v1 kind : Service metadata : name : {{ .Values.service.name }} spec : selector : app : {{ .Values.service.app }} ports : - protocol : TCP port : {{ .Values.service.port }} targetPort : {{ .Values.service.targetport }} Kubernetes YAML File Example apiVersion : v1 kind : Pod metadata : name : nginx labels : app : nginx spec : containers : - name : nginx-container image : nginx ports : - containerPort : 80 volumeMounts : - name : nginx-vol mountPath : /usr/nginx/html - name : sidecar-container image : some-image command : [ \"/bin/bash\" ] args : [ \"-c\" , \"echo Hello from the sidecar-container; sleep 300\" ]","title":"YAML"},{"location":"Basic/yaml/#yaml","text":"Full form YAML Ain't Markup Language YAML is Data Serialization Language File Extensions .yaml .yml It is human readable and easy to write YAML uses line separation and indentation used to store data structure","title":"YAML"},{"location":"Basic/yaml/#writing-yaml","text":"","title":"Writing YAML"},{"location":"Basic/yaml/#key-value-pair","text":"Syntax: - key: value app : \"user-authentication\" port : 9000 version : 1.7","title":"Key-Value Pair"},{"location":"Basic/yaml/#comments","text":"Syntax: - # Comment # Sinble Line Comment app : \"user-authentication\" port : 9000 version : 1.7","title":"Comments"},{"location":"Basic/yaml/#objects","text":"We can group this in object using spacing microservice : # Object for Grouping # Sinble Line Comment app : \"user-authentication\" port : 9000 version : 1.7","title":"Objects"},{"location":"Basic/yaml/#list","text":"If we have multiple microservices then we can list using - 1: list of Objects grouping yaml microservice: # Object for Grouping - app: \"user-authentication\" port: 9000 version: 1.7 - app: \"shopping-cart\" port: 9002 version: 1.9 2: list of simple values (list of just microservice names) microservice : # Object for Grouping - user-authentication - shopping-cart 3: list of lists (we can create list of list using) 3.1. first method using - microservice : # Object for Grouping - app : \"user-authentication\" port : 9000 version : 1.7 - app : \"shopping-cart\" port : 9002 version : - 1.9 - 2.0 - 2.1 3.2. second method using [] microservice : # Object for Grouping - app : \"user-authentication\" port : 9000 version : 1.7 - app : \"shopping-cart\" port : 9002 version : [ 1.9 , 2.0 , 2.1 ]","title":"list"},{"location":"Basic/yaml/#booleans","text":"We can also use boolean values express using on/off, true/false, yes/no microservice : # Object for Grouping - app : \"user-authentication\" port : 9000 version : 1.7 deployed : true","title":"Booleans"},{"location":"Basic/yaml/#string","text":"1: Mutli-Line String 1 st method multiString : \"this is multiline String\\nand this is the next line\\nnext line\" 2 nd method using | multiString : | this is multiline String and this is the next line next line 2: Single-Line Sting 1 st method multiString : \"this is a single line String, that should be all on one line. some other stuff\" 2 nd method using > multiString : > this is a single line String, that should be all on one line. some other stuff","title":"String"},{"location":"Basic/yaml/#placeholders","text":"Values replaced from template generator using {{ }} apiVersion : v1 kind : Service metadata : name : {{ .Values.service.name }} spec : selector : app : {{ .Values.service.app }} ports : - protocol : TCP port : {{ .Values.service.port }} targetPort : {{ .Values.service.targetport }}","title":"Placeholders"},{"location":"Basic/yaml/#multiple-yaml-files","text":"Multiple YAML Documents in Single File usign --- apiVersion : v1 kind : Pod metadata : name : nginx labels : app : nginx spec : containers : - name : nginx-container image : nginx ports : - containerPort : 80 volumeMounts : - name : nginx-vol mountPath : /usr/nginx/html - name : sidecar-container image : some-image command : [ \"/bin/bash\" ] args : [ \"-c\" , \"echo Hello from the sidecar-container; sleep 300\" ] --- apiVersion : v1 kind : Service metadata : name : {{ .Values.service.name }} spec : selector : app : {{ .Values.service.app }} ports : - protocol : TCP port : {{ .Values.service.port }} targetPort : {{ .Values.service.targetport }}","title":"Multiple YAML Files"},{"location":"Basic/yaml/#kubernetes-yaml-file-example","text":"apiVersion : v1 kind : Pod metadata : name : nginx labels : app : nginx spec : containers : - name : nginx-container image : nginx ports : - containerPort : 80 volumeMounts : - name : nginx-vol mountPath : /usr/nginx/html - name : sidecar-container image : some-image command : [ \"/bin/bash\" ] args : [ \"-c\" , \"echo Hello from the sidecar-container; sleep 300\" ]","title":"Kubernetes YAML File Example"}]}